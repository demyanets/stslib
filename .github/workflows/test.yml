# This workflow will do a clean install of node dependencies and run tests

name: test

on:
  push:
    branches:
      - '**'

  pull_request:
    branches:
      - master
      - develop

jobs:
  test:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - run: npm ci
    - run: npm run test:ci
    - name: Upload test results
      uses: actions/upload-artifact@v2
      with:
        name: tests
        path: tests/
    - name: Upload coverage data
      uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: coverage/
    - name: Upload 'coverage-summary.json'
      uses: actions/upload-artifact@v2
      with:
        name: coverage-summary.json
        path: coverage/stslib/coverage-summary.json
    - name: Comment test coverage on commit
      uses: jacobbowdoin/comment-test-coverage@1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        path: coverage/stslib/coverage-summary.json

    - name: Test angular action
      uses:  demyanets/angular-coverage-badges-action@master
      with:
        coverage-summary-path: coverage/stslib/coverage-summary.json
        protected-branches: '["master", "develop"]'

    # Coverage badges will be updated on any branch except protected
    # branches 'develop' and 'master' and on a pull requests
    - name: Init protected branch flag
      run: echo ::set-env name=PROTECTED_BRANCH::false;
    - name: Set protected branch flag
      run: echo ::set-env name=PROTECTED_BRANCH::true;
      if: >
        github.ref == 'ref/head/develop' ||
        github.ref == 'ref/head/master' ||
        startsWith(github.ref, 'refs/pull/')
    - name: Print information about protected branch
      run: echo "This branch is protected!"
      if: env.PROTECTED_BRANCH == 'true'

    - name: Count SVG differences between local repo and origin
      run: echo ::set-env name=SVG_DIFF_COUNTER::$(git diff @{upstream} --numstat | grep ".svg" | wc -l)
    - run: echo "There are no differences!"
      if: env.SVG_DIFF_COUNTER == '0'

    - run: echo $GITHUB_REF
    - name: Commit coverage badges
      if: >
        env.SVG_DIFF_COUNTER != '0' &&
        env.PROTECTED_BRANCH != 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit --allow-empty -m "Coverage badge update" -- badges
    - name: Push changes
      if: >
        env.SVG_DIFF_COUNTER != '0' &&
        env.PROTECTED_BRANCH != 'true'
      run: git push
