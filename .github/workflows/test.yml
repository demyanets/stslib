# This workflow will do a clean install of node dependencies and run tests

name: test

on:
  push:
    branches:
      - '**'

  pull_request:
    branches:
      - master
      - develop

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - run: npm ci
    - run: npm run test:ci
    - name: Upload test results
      uses: actions/upload-artifact@v2
      with:
        name: tests
        path: tests/
    - name: Upload coverage data
      uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: coverage/
    - name: Upload 'coverage-summary.json'
      uses: actions/upload-artifact@v2
      with:
        name: coverage-summary.json
        path: coverage/stslib/coverage-summary.json
    - name: Comment test coverage on commit
      uses: jacobbowdoin/comment-test-coverage@1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        path: coverage/stslib/coverage-summary.json


    # Coverage badges will be updated on any branch except protected branches 'develop' and 'master'
    # and on pull requests
    - name: Retrieve git diff stats
      run: |
        echo ::set-env name=GIT_DIFF_STATS::$(git diff @{upstream})
    - run: echo $GIT_DIFF_STATS
    - run: echo True
      if: GIT_DIFF_STATS == ''

    - run: echo $GITHUB_REF
    - name: Commit coverage badges
      if: github.ref != 'ref/head/develop' && github.ref != 'ref/head/master' && startsWith(github.ref, 'refs/pull/') != true
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit --allow-empty -m "Coverage badge update trigger" -- badges
    - name: Read current branch name
      if: github.ref != 'ref/head/develop' && github.ref != 'ref/head/master' && startsWith(github.ref, 'refs/pull/') != true
      uses: nelonoel/branch-name@v1
    - run: echo ${BRANCH_NAME}
    - name: Push changes
      if: github.ref != 'ref/head/develop' && github.ref != 'ref/head/master' && startsWith(github.ref, 'refs/pull/') != true
      run: git push
